#! /bin/sh

# interfaces
# external interface
EXT=eth0
#internal interfaces
INT=virbr10
#PUBLIC_INT=eth3

#loopback interface
LOOP=lo

#
# Setup firewall rules
#
setup()
{
    if [ -e /proc/sys/net/ipv4/conf/all/rp_filter ]
    then
    for filter in /proc/sys/net/ipv4/conf/*/rp_filter
    do
    echo 1 > $filter
    done
    fi

    echo -n "FW:Clear tables ... "
    iptables -F
    iptables -t nat -F
    iptables -t mangle -F
    iptables -X
    echo "done"




    echo -n "FW:Input rules ... "
    # First rule since it is in all likelihood the most common rule to be hit
    iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    # Accept traffic from loopback interface (localhost)
    iptables -A INPUT -i $LOOP -j ACCEPT
    iptables -A INPUT -m state --state NEW -i $INT  -j ACCEPT
# todo: disable access to firewall from public internal wlan
#    iptables -A INPUT -m state --state NEW -i $PUBLIC_INT  -j ACCEPT


#   allow access to tcp port number XX
#    iptables -A INPUT -m state --state NEW -p tcp --dport XX -j ACCEPT
    iptables -A INPUT -m state --state NEW -p tcp --dport ssh -j ACCEPT
#   allow access to udp port number XX
#    iptables -A INPUT -m state --state NEW -p udp --dport XX -j ACCEPT


# Allow icmp requests
    iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT
    iptables -A INPUT -j LOG --log-prefix "IN-DROP: " 
    iptables -A INPUT -j DROP
    echo "done"

    {% if external_interface  == '' %}
        {% for forwarded_port in firewall_forwarded_tcp_ports %}
        iptables -t nat -I PREROUTING -p tcp --dport {{ forwarded_port.src }} -j REDIRECT --to-port {{ forwarded_port.dest }}
        iptables -t nat -I OUTPUT -p tcp -o lo --dport {{ forwarded_port.src }} -j REDIRECT --to-port {{ forwarded_port.dest }}
        {% endfor %}
        {% for forwarded_port in firewall_forwarded_udp_ports %}
        iptables -t nat -I PREROUTING -p udp --dport {{ forwarded_port.src }} -j REDIRECT --to-port {{ forwarded_port.dest }}
        iptables -t nat -I OUTPUT -p udp -o lo --dport {{ forwarded_port.src }} -j REDIRECT --to-port {{ forwarded_port.dest }}
        {% endfor %}
    {% else %}     
    #   Masquerading rule in case we want to masquerade our local ips
        echo -n "FW:Masquerading rules ... "
        iptables -t nat -A POSTROUTING -o {{ external_interface }} -j MASQUERADE
        iptables -A POSTROUTING -t mangle -p udp --dport bootpc -j CHECKSUM --checksum-fill
        echo "done"

        echo -n "FW:Forward rules ... "
        iptables -A FORWARD -i {{ external_interface }} -m state --state ESTABLISHED,RELATED -j ACCEPT
        iptables -A FORWARD -i {{ internal_interface }} -m state --state ESTABLISHED,RELATED -j ACCEPT
        iptables -A FORWARD -i {{ internal_interface }} -j ACCEPT
        echo "done"
    
        # forward external tcp port to port of another machine
        echo -n "FW:Port forwarding rules ... "
        {% for server in target servers %}
            {% for forwarded_port in server.firewall_forwarded_ports %}
        #    iptables -t nat -A PREROUTING -i {{ external_interface }} -p tcp --dport 22 -j DNAT --to 10.0.0.2:22
        #   iptables -A FORWARD -i {{ external_interface }} -p tcp --destination 10.10.0.2 --dport 22 -m state --state NEW -j ACCEPT

        #   forward external udp port to port of another machine Ex. VPN
        #   iptables -t nat -A PREROUTING -i $EXT -p udp --dport 1195 -j DNAT --to 192.168.0.2:1194
        #   iptables -A FORWARD -i $EXT -p udp --destination 192.168.0.2 --dport 1194 -m state --state NEW -j ACCEPT

        #   allow access to tcp port XX from specific source ip
        #    iptables -t nat -A PREROUTING -i $EXT -p tcp --dport XX -j DNAT --to 10.0.0.2:XX
        #    iptables -A FORWARD -i $EXT -p tcp --source 0.0.0.0 --destination 10.0.0.2 --dport XX -m state --state NEW -j ACCEPT

        iptables -A FORWARD -j LOG --log-prefix "FWD-DROP: " 
        iptables -A FORWARD -j DROP
        echo "done."

        echo -n "FW:IP Forwarding ... "
        echo 1 > /proc/sys/net/ipv4/ip_forward
        # disable ipv6 forwarding so far ...
        echo 0 > /proc/sys/net/ipv6/conf/all/forwarding
        echo "done."
        return 0
    {% endif %}
}

#
# Teardown firewall
#
flush()
{
    echo -n "FW: Clear tables ... "
    iptables -F
    iptables -t nat -F
    iptables -t mangle -F
    iptables -X
    echo "done"
    return 0
}

case "$1" in
    start|restart)
	setup
	;;
    stop)
	flush
	;;
esac

:
